name: Generate bundle
on:
  push:
    branches: [ main ]
    #paths:
    #  - 'bundles/test/**'
env:
  BUNDLE: "test"

jobs:
  generate-bundle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          node-version: '14'

      - name: Install npm packages
        uses: bahmutov/npm-install@v1

      - name: Create bundle directory
        run: mkdir bundle

      - name: Create app directory
        run: mkdir ./bundle/app

      - name: Move scripts
        run: mv ./scripts ./bundle

      - name: Move node-deamon config
        run: mv ./app.config.js ./bundle

      - name: Move appspec.yml config
        run: mv ./appspec.yml ./bundle

      - name: Create npm config
        run: echo "registry=https://npm.pkg.github.com/imagineon" > ./bundle/.npmrc

      - name: Move bundle
        run: mv ./bundles/$BUNDLE/* ./bundle/app/

      - name: Create .zip file
        run: gulp bundle --client $BUNDLE

      - name: Get .zip file name
        run: |
          echo "::set-output name=BUNDLE_FILE_PATH::./build/`ls ./build`"
          echo "::set-output name=BUNDLE_FILE_NAME::`ls ./build`"
        id: files

      ##- name: Test file names
      ##  run: |
      ##    echo ${{ steps.files.outputs.BUNDLE_FILE_NAME }}
      ##    echo ${{ steps.files.outputs.BUNDLE_FILE_PATH }}

      # At this point we gathered all the files and information and are ready to upload
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Upload to s3
        run: aws s3 sync ./build s3://coldwave-bundles/$BUNDLE